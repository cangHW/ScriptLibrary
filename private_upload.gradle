import org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency

def names = ["api", "implementation"]

apply plugin: 'maven-publish'

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.source

    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}

publishing {
    def prjName = project.name.split(":").last()
    publications {
        upload(MavenPublication) {
            groupId project.ext.sdk["group"]
            artifactId project.ext.sdk[prjName]["artifact"]
            version project.ext.sdk[prjName]["version"]

            if (project.ext.sdk[prjName]["source"]){
                artifact sourcesJar
            }
            artifact("$buildDir/outputs/aar/${prjName}-release.aar")

            pom.withXml {
                def map = []
                def dependenciesNode = asNode().appendNode('dependencies')
                names.forEach {
                    def cof = configurations.getByName(it)
                    cof.allDependencies.forEach {
                        if (it instanceof DefaultProjectDependency) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', project.ext.sdk["group"])
                            dependencyNode.appendNode('artifactId', project.ext.sdk[it.name]["artifact"])
                            dependencyNode.appendNode('version', project.ext.sdk[it.name]["version"])
                            dependencyNode.appendNode('scope', cof.name)
                        } else if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {
                            def key = it.group + ":" + it.name + ":" + it.version
                            if (!map.contains(key)) {
                                map.add(key)
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                                dependencyNode.appendNode('scope', cof.name)
                            }
                        }
                    }
                }
            }
        }

        tasks.withType(PublishToMavenRepository).configureEach { publishTask ->
            publishTask.dependsOn assembleRelease
        }
    }

    repositories {
        maven {
            url project.ext.sdk["snapshot_url"]
            credentials {
                username project.ext.sdk[prjName]["username"]
                password project.ext.sdk[prjName]["password"]
            }
        }
        maven {
            url project.ext.sdk["release_url"]
            credentials {
                username project.ext.sdk[prjName]["username"]
                password project.ext.sdk[prjName]["password"]
            }
        }
    }
}