import org.gradle.api.internal.artifacts.dependencies.DefaultProjectDependency

def group_config = 'config'

def listDependencies(Project project, Map localMap) {
    project.configurations.configureEach { it ->
        it.dependencies.each { dependency ->
            if (dependency instanceof DefaultProjectDependency) {
                DefaultProjectDependency dep = dependency
                if (localMap[dep.dependencyProject.name] == null) {
                    localMap[dep.dependencyProject.name] = dep.dependencyProject.getPath()
                    listDependencies(dep.dependencyProject, localMap)
                }
            }
        }
    }
}

Task findDependencies = tasks.register("findDependencies").get().doLast {
    def localMap = [:]
    localMap[project.name] = project.getPath()
    listDependencies(project, localMap)

    File file = new File(project.rootDir.absolutePath, "plugins/upload/" + project.name + ".txt")
    file.getParentFile().mkdirs()
    file.delete()
    file.createNewFile()

    FileWriter writer = new FileWriter(file)
    localMap.entrySet().forEach {
        writer.write(it.value + "\n")
    }
    writer.flush()
    writer.close()
}
findDependencies.setGroup(group_config)
